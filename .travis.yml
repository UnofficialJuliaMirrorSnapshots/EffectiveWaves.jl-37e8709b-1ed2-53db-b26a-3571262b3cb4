## Documentation: http://docs.travis-ci.com/user/languages/julia/
language: julia
os:
  - linux
  - osx
julia:
  - "1.0"
  - "1.1"
  # - nightly
notifications:
  email: false
git:
  depth: 99999999

# install: mvn install

## uncomment the following lines to allow failures on nightly julia
## (tests will run but not make your overall status red)
#matrix:
#  allow_failures:
#  - julia: nightly

## uncomment and modify the following lines to manually install system packages
#addons:
#  apt: # apt-get for linux
#    packages:
#    - gfortran
#before_script: # homebrew for mac
#  - if [ $TRAVIS_OS_NAME = osx ]; then brew install gcc; fi

## uncomment the following lines to override the default test script
#script:
#  - julia -e 'Pkg.clone(pwd()); Pkg.build("EffectiveWaves.jl"); Pkg.test("EffectiveWaves.jl"; coverage=true)'
after_success:
  # push coverage results to Coveralls
  - julia -e 'using Pkg; cd(Pkg.dir("EffectiveWaves")); Pkg.add("Coverage"); using Coverage; Coveralls.submit(Coveralls.process_folder())'
  # push coverage results to Codecov
  - julia -e 'using Pkg; cd(Pkg.dir("EffectiveWaves")); Pkg.add("Coverage"); using Coverage; Codecov.submit(Codecov.process_folder())'

jobs:
  include:
    - stage: "Documentation"
      os: linux
      env:
        - DOCUMENTER_DEBUG=true
      script:
        - |
          julia --project=docs/ -e'
            ENV["DOCUMENTER_DEBUG"] = "true"
            using Pkg; Pkg.develop(PackageSpec(path=pwd()))
            Pkg.instantiate()
            include("docs/make.jl")
            println("documenter_key=", get(ENV, "DOCUMENTER_KEY", ""), "\n",
            "travis_branch=", get(ENV, "TRAVIS_BRANCH", ""), "\n",
            "travis_pull_request=", get(ENV, "TRAVIS_PULL_REQUEST", ""), "\n",
            "travis_repo_slug=", get(ENV, "TRAVIS_REPO_SLUG", ""), "\n",
            "travis_tag=", get(ENV, "TRAVIS_TAG", ""), "\n",
            "travis_event_type=", get(ENV, "TRAVIS_EVENT_TYPE", ""))
          '
      name: "HTML"
      after_success: skip
